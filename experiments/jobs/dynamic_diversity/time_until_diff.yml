apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: wasm-trace-until-1-
spec:
  entrypoint: per-file
  parallelism: 80
  templates:
  - name: per-file
    steps:
    - - name: select-file
        template: wasm-mutate-template
        arguments:
          parameters:
            - name: file
              value: "{{ item.file }}"
        withItems:
          - { file: "100_doors.c" }
          - { file: "Non-decimal_radices-Output.c" }


          # Add the others here

  - name: wasm-mutate-template
    # activeDeadlineSeconds: 36000
    retryStrategy:
      limit: 2
    inputs:

      parameters:
      - name: file
      artifacts:
      - name: data
        path: "/{{inputs.parameters.file}}"
        archive:
          none: {}
        s3:
          bucket: wasm-mutate
          endpoint: 137.135.188.207:9000
          insecure: true
          # Avoid to mount the full metas_filtered folder in the container
          key: "/no_input/{{inputs.parameters.file}}"
          accessKeySecret:
            name: argo-artifacts-extr
            key: accesskey
          secretKeySecret:
            name: argo-artifacts-extr
            key: secretkey
    outputs:
      artifacts:
      - name: variants
        path: out_trace/
        optional: true
        archive:
          none: {}
        s3:
          bucket: wasm-mutate
          endpoint: 137.135.188.207:9000
          insecure: true
          # Avoid to mount the full metas_filtered folder in the container
          key: "/traces_until_oracle/{{inputs.parameters.file}}/"
          accessKeySecret:
            name: argo-artifacts-extr
            key: accesskey
          secretKeySecret:
            name: argo-artifacts-extr
            key: secretkey
    script:
      image: jacarte/wm-image:latest
      command: [bash]
      env:
      - name: MINIOPASS  # name of env var
        valueFrom:
          secretKeyRef:
            name: argo-artifacts-extr    # name of an existing k8s secret
            key: secretkey     # 'key' subcomponent of the secret
      resources:
        requests:
          memory: "1G"
          cpu: 0.5
      source: |

          # install minio mc
          mkdir -p $HOME/minio-binaries
          mkdir -p /out
          mkdir -p /out_trace

          wget -q -O $HOME/minio-binaries/mc https://dl.min.io/client/mc/release/linux-amd64/mc
          ls
          echo "======"
          chmod +x $HOME/minio-binaries/mc
          export PATH=$PATH:$HOME/minio-binaries/



          mc config host add exp http://137.135.188.207:9000 minio ${MINIOPASS}

          # Install 7z deps
          apt-get update && apt-get install -y p7zip-full curl python3 unzip

          # Insall wasm-tools
          wget -q -O wasm-tools.gz https://github.com/Jacarte/tawasco/releases/download/1.0.0/wasm-tools-all-x86_64-linux-1.0.0.gz

          wget -q -O stacking.gz https://github.com/Jacarte/tawasco/releases/download/1.4.2/stacking-x86_64-linux-1.4.2.gz

          7z x stacking.gz
          chmod +x stacking
          mv stacking /usr/local/bin/stacking

          # Extract wasm-tools
          7z x wasm-tools.gz
          chmod +x wasm-tools
          ls -lah wasm-tools
          mv wasm-tools /usr/local/bin/wasm-tools

          ls -la /usr/local/bin
          wasm-tools --version || exit 1

          wget -q -O wasmtime.gz https://github.com/Jacarte/tawasco/releases/download/0.1.8/wasmtime-x86_64-linux-0.1.8.gz || exit 1

          rm -rf ./wasmtime || true

          7z x wasmtime.gz || exit 1
          chmod +x wasmtime
          mv wasmtime /usr/local/bin/wasmtime
          wasmtime --version || exit 1


          wget -q -O tracer.gz https://github.com/Jacarte/tawasco/releases/download/1.3.0/tracer-x86_64-linux-1.3.0.gz
          7z x tracer.gz
          chmod +x tracer
          mv tracer /usr/local/bin/tracer

          wget -q -O pintool.gz  https://github.com/Jacarte/tawasco/releases/download/1.3.0/pintool-linux.gz
          tar -xvf pintool.gz
          ls /host_based

          export PIN_ROOT=/host_based/tracer/pintool/pin

          # Download test wasm
          wget -q -O test.wasm https://github.com/Jacarte/tawasco/raw/main/host_based/tracer/tests/wasms/wb_challenge.wasm
          /host_based/tracer/pintool/pin/pin -t /host_based/tracer/pintool/obj-intel64/tracer.so -i 0 -m 1 -c 0 -b 0 -o tmp.mem.txt -- tracer test.wasm
          # cat tmp.mem.txt


          echo minio:${MINIOPASS} > ~/.passwd-s3fs
          chmod 600 ~/.passwd-s3fs

          mkdir -p /variants
          wget -q https://github.com/kahing/goofys/releases/download/v0.24.0/goofys
          chmod +x goofys
          mv goofys /usr/local/bin/
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = minio" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${MINIOPASS}" >> ~/.aws/credentials


          mkdir -p out
          start_time=$(date +%s)
          bash download_wasi.sh
          wasi-sdk/bin/clang "/{{inputs.parameters.file}}" -Wl,--allow-undefined -o "out/{{inputs.parameters.file}}.wasm"
          # Set random seed
          SEED=640
          ulimit -n
          ulimit -S

          TIME=3600
          # TIME=10800

          # Download the oracles
          wget -O /oracle_diff_trace_ins.sh https://raw.githubusercontent.com/Jacarte/tawasco/main/experiments/jobs/dynamic_diversity/oracle_diff_trace_ins.sh
          wget -O /oracle_diff_trace_mem.sh https://raw.githubusercontent.com/Jacarte/tawasco/main/experiments/jobs/dynamic_diversity/oracle_diff_trace_mem.sh

          # First we execute the original wasm

          /host_based/tracer/pintool/pin/pin -t /host_based/tracer/pintool/obj-intel64/tracer.so -i 0 -m 1 -M 0 -c 0 -b 0 -o orig.mem.txt -- tracer "out/{{inputs.parameters.file}}.wasm"
          /host_based/tracer/pintool/pin/pin -t /host_based/tracer/pintool/obj-intel64/tracer.so -i 1 -m 0 -c 1 -b 1  -o orig.ins.txt -- tracer "out/{{inputs.parameters.file}}.wasm"

          cp orig.mem.txt out_trace/orig.mem.txt
          cp orig.ins.txt out_trace/orig.ins.txt

          echo "Running the diversifier"

          for seed in $(seq 1 2)
          do
            echo $seed "Inst"
            RUST_LOG=wasm_mutate=debug  stacking "out/{{inputs.parameters.file}}.wasm" "out/stacking.$seed.ins.wasm" --seed $seed --count 1000000 -v 1 --chaos-mode --variants-per-parent 5  --check-io --oracle "/bin/bash /oracle_diff_trace_ins.sh orig.ins.txt" --remove-cache --save-compiling --report-only-if-diff-mc
            # Save the last trace
            cp trace.ins.txt out_trace/stacking.$seed.ins.txt

            echo $seed "Mem"
            RUST_LOG=wasm_mutate=debug  stacking "out/{{inputs.parameters.file}}.wasm" "out/stacking.$seed.mem.wasm" --seed $seed --count 1000000 -v 1 --chaos-mode --variants-per-parent 5  --check-io --oracle "/bin/bash /oracle_diff_trace_mem.sh orig.mem.txt" --remove-cache --save-compiling --report-only-if-diff-mc
            # Save the last trace
            cp trace.mem.txt out_trace/stacking.$seed.mem.txt
          done


          cp out/stacking.*.wasm.chaos.json out_trace/

          echo "Ins"
          cat out_trace/stacking.1.ins.wasm.chaos.json
          echo "Mem"
          cat out_trace/stacking.1.mem.wasm.chaos.json
          du -h /out_trace
          ls -la /out_trace | wc -l


        # 7z a  -m0=lz5 -mx1 -mmt=10 /variants.zip out/
